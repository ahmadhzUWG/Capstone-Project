using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.AspNetCore.Mvc.ModelBinding.Validation;

namespace TaskManagerData.Models;

/// <summary>
/// Represents a group within the task management system.
/// A group consists of multiple users and is managed by one group manager.
/// </summary>
public class Group
{
    /// <summary>
    /// Gets or sets the unique identifier for the group.
    /// This value is auto-generated by the database.
    /// </summary>
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public int Id { get; set; }

    /// <summary>
    /// Gets or sets the name of the group.
    /// This field is required and must not exceed 100 characters.
    /// </summary>
    [Required(ErrorMessage = "Name is required")]
    [StringLength(100, ErrorMessage = "Group Name cannot exceed 100 characters")]
    public string Name { get; set; }

    /// <summary>
    /// Gets or sets the description of the group.
    /// This field is required and must not exceed 500 characters.
    /// </summary>
    [Required(ErrorMessage = "Description is required")]
    [StringLength(500, ErrorMessage = "Description cannot exceed 500 characters")]
    public string Description { get; set; }

    /// <summary>
    /// Gets or sets the collection of users who are members of the group.
    /// </summary>
    public ICollection<UserGroup> UserGroups { get; set; } = new List<UserGroup>();

    /// <summary>
    /// Gets or sets the collection of managers responsible for the group.
    /// </summary>
    public ICollection<GroupManager> Managers { get; set; } = [];

    /// <summary>
    /// Gets or sets the ID of the primary manager of the group.
    /// This value is optional.
    /// </summary>
    public int? ManagerId { get; set; }

    /// <summary>
    /// Gets or sets the primary manager of the group.
    /// This property is not validated during model binding.
    /// </summary>
    [ValidateNever]
    public User? Manager { get; set; }

    /// <summary>
    /// Gets or sets the collection of group projects associated with this group.
    /// </summary>
    public ICollection<GroupProject> GroupProjects { get; set; } = new List<GroupProject>();
}
