@using Microsoft.AspNetCore.Mvc.TagHelpers
@model TaskManagerWebsite.ViewModels.ProjectViewModels.ProjectBoardViewModel
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="text-align:center;">

    <h1>@Model.Project.Name - Project Board</h1>

    @if (Model.Project.ProjectBoard == null)
    {
        <p>No board found for this project.</p>
    }
    else
    {
        <div class="d-flex flex-row justify-content-center">
            @foreach (var stage in Model.Project.ProjectBoard.Stages.OrderBy(s => s.Position))
            {
                <div class="p-2 board-column" style="border: 1px solid #ccc; margin: 10px;">
                    <h5>
                        @if ((Model.CanAddStage
                              && (await AuthorizationService.AuthorizeAsync(User, ViewBag.UserId, "IsProjectLead")).Succeeded) 
                             || (await AuthorizationService.AuthorizeAsync(User, ViewBag.UserId, "IsAdmin")).Succeeded)
                        {
                            <a asp-controller="Project" asp-action="EditStage" asp-route-stageId="@stage.Id">
                                @stage.Position - @stage.Name
                                </a>
                        }
                        else
                        {
                            @($"{stage.Position} - {stage.Name}")
                        }
                    </h5>
                    <h8>
                        Assigned Group: @stage.AssignedGroup?.Name
                    </h8>
                </div>
            }
        </div>

    }

    @if ((Model.CanAddStage
          && (await AuthorizationService.AuthorizeAsync(User, ViewBag.UserId, "IsProjectLead")).Succeeded) 
         || (await AuthorizationService.AuthorizeAsync(User, ViewBag.UserId, "IsAdmin")).Succeeded)
    {
        <hr />
        <h3>Add Stage</h3>

        @Html.ValidationSummary(excludePropertyErrors: true, message: "", htmlAttributes: new { @class = "text-danger" })

        <form asp-controller="Project" asp-action="ProjectBoard" asp-route-id="@Model.Project.Id" method="post">
            @Html.AntiForgeryToken()

            <div>
                <label asp-for="StageForm.Name"></label>
                <input asp-for="StageForm.Name" />
                <span asp-validation-for="StageForm.Name" class="text-danger"></span>
            </div>

            <div>
                <label asp-for="StageForm.Position"></label>
                <input asp-for="StageForm.Position" type="number" />
                <span asp-validation-for="StageForm.Position" class="text-danger"></span>
            </div>

            <div>
                <label asp-for="StageForm.SelectedGroupId"></label>
                <select asp-for="StageForm.SelectedGroupId" asp-items="Model.StageForm.AvailableGroups">
                    <option value="">-- Select a Group --</option>
                </select>
                <span asp-validation-for="StageForm.SelectedGroupId" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary">Add Stage</button>
        </form>
    }

    <a asp-controller="User" asp-action="ProjectDetails" asp-route-id="@Model.Project.Id" class="btn btn-secondary mt-3">
        Go Back
    </a>
</div>
