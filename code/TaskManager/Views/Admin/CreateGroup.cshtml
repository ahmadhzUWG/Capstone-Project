@model TaskManagerWebsite.Models.Group

<link href="~/css/admin_createGroups.css" rel="stylesheet" />

<h1>Create Group</h1>

<form id="createGroupForm" asp-action="CreateGroup" asp-controller="Admin" method="post">
    <div class="form-group">
        <label asp-for="Name">Group Name</label>
        <input asp-for="Name" class="form-control" required />
        <span asp-validation-for="Name" class="text-danger"></span>
        <br />
        <label asp-for="Description">Group Description</label>
        <input asp-for="Description" class="form-control" required />
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label>Select Manager</label>
        <input type="text" id="searchBoxManagers" class="form-control mb-2" placeholder="Search managers...">
        <select id="managerDropdown" name="selectedManager" class="form-control">
            <option value="">-- Select a Manager --</option>
            @foreach (var user in ViewBag.Employees ?? new List<User>())
            {
                <option value="@user.Id" class="manager-option" data-user-id="@user.Id">@user.UserName (@user.Email)</option>
            }
        </select>
    </div>
    <br />
    <div class="form-group">
        <label>Select Employees</label>
        <input type="text" id="searchBoxEmployees" class="form-control mb-2" placeholder="Search employees...">
        <div id="employeeContainer">
            @foreach (var user in ViewBag.Employees ?? new List<User>())
            {
                <div class="form-check employee-box" data-user-id="@user.Id">
                    <input type="checkbox" name="selectedUsers" value="@user.Id" class="form-check-input employee-checkbox" />
                    <label class="form-check-label">@user.UserName (@user.Email)</label>
                </div>
            }
        </div>
    </div>
    <br />
    <button type="submit" class="btn btn-success">Create</button>
</form>
<br />
<a href="@Url.Action("Groups", "Admin")" class="btn btn-secondary">Back to Groups</a>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById("createGroupForm").addEventListener("submit", function (event) {
            let selectedManager = document.getElementById("managerDropdown").value;
            if (!selectedManager) {
                alert("Please select a Manager.");
                event.preventDefault();
            }
        });

        function setupDropdownSearch(inputId, dropdownId) {
            document.getElementById(inputId).addEventListener("keyup", function () {
                let searchValue = this.value.toLowerCase();
                let options = document.querySelectorAll("#" + dropdownId + " .manager-option");
                options.forEach(function (option) {
                    let isVisible = option.textContent.toLowerCase().includes(searchValue);
                    option.style.display = isVisible ? "block" : "none";
                });
            });
        }

        function setupSearch(inputId, containerId) {
            document.getElementById(inputId).addEventListener("keyup", function () {
                let searchValue = this.value.toLowerCase();
                let checkboxes = document.querySelectorAll("#" + containerId + " .employee-box");
                checkboxes.forEach(function (box) {
                    let label = box.querySelector(".form-check-label").textContent.toLowerCase();
                    let isHidden = box.style.display === "none"; // Check if already hidden due to manager selection
                    box.style.display = label.includes(searchValue) && !isHidden ? "block" : "none";
                });
            });
        }

        document.getElementById("managerDropdown").addEventListener("change", function () {
            let selectedManagerId = this.value;
            let employeeCheckboxes = document.querySelectorAll(".employee-box");

            employeeCheckboxes.forEach(function (box) {
                let checkbox = box.querySelector(".employee-checkbox");
                let userId = box.getAttribute("data-user-id");

                if (userId === selectedManagerId) {
                    checkbox.checked = false; // Uncheck if it was selected
                    box.style.display = "none"; // Hide the employee checkbox
                } else {
                    box.style.display = "block"; // Show other employees
                }
            });

            let managerOptions = document.querySelectorAll("#managerDropdown option");
            managerOptions.forEach(function (option) {
                let userId = option.getAttribute("data-user-id");
                let employeeBox = document.querySelector(".employee-box[data-user-id='" + userId + "']");

                if (userId === selectedManagerId && employeeBox) {
                    employeeBox.style.display = "none";
                } else if (employeeBox) {
                    employeeBox.style.display = "block";
                }
            });
        });

        document.querySelectorAll(".employee-checkbox").forEach(function (checkbox) {
            checkbox.addEventListener("change", function () {
                let userId = this.value;
                let managerOption = document.querySelector("#managerDropdown option[data-user-id='" + userId + "']");

                if (this.checked) {
                    // Hide from manager dropdown if selected as an employee
                    if (managerOption) {
                        managerOption.style.display = "none";
                        if (managerOption.selected) {
                            document.getElementById("managerDropdown").value = ""; // Reset manager selection if it was selected
                        }
                    }
                } else {
                    // Show back in manager dropdown if unchecked as an employee
                    if (managerOption) {
                        managerOption.style.display = "block";
                    }
                }
            });
        });

        setupDropdownSearch("searchBoxManagers", "managerDropdown");
        setupSearch("searchBoxEmployees", "employeeContainer");
    </script>
}