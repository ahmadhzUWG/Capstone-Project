@model TaskManagerWebsite.ViewModels.GroupViewModel
@using TaskManagerData.Models
@using TaskManagerWebsite.Components


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="/css/Admin/createGroups.css" />

<div class="container">
    <div class="form-container">
        <h1 class="text-center">Create Group</h1>

        <form id="createGroupForm" asp-action="CreateGroup" asp-controller="Admin" method="post" class="needs-validation" novalidate>
            <div class="form-group">
                <label asp-for="Name">Group Name</label>
                <input asp-for="Name" class="form-control" required />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description">Group Description</label>
                <input asp-for="Description" class="form-control" required />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Select Manager</label>
                <component type="typeof(ManagerSearch)"
                           render-mode="ServerPrerendered"
                           param-Managers="@(ViewBag.Employees ?? new List<User>())"
                           param-SelectedManagerId="@(Model?.SelectedManagerId ?? 0)" />
                <span asp-validation-for="SelectedManagerId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Select Employees</label>

                <input type="text" id="searchBoxEmployees" class="form-control mb-2" placeholder="Search employees...">
                <div id="employeeContainer" class="employee-list">
                    @foreach (var user in ViewBag.Employees ?? new List<User>())
                    {
                        <div class="form-check employee-box" data-user-id="@user.Id">
                            <input type="checkbox" name="SelectedUserIds" value="@user.Id" class="form-check-input employee-checkbox"
                            @(Model?.SelectedUserIds != null && Model.SelectedUserIds.Contains(user.Id) ? "checked" : "") />
                            <label class="form-check-label">@user.UserName (@user.Email)</label>
                        </div>
                    }
                </div>
            </div>

            <button type="submit" class="btn btn-success btn-block mt-3">Create</button>
        </form>

        <a href="@Url.Action("Groups", "Admin")" class="btn btn-secondary btn-block mt-2">Back to Groups</a>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/groupFunctions.js"></script>
}
