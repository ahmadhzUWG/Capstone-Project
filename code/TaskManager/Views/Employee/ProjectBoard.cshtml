@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using TaskManagerWebsite.ViewModels.ProjectViewModels
@using TaskManagerData.Models
@model TaskManagerWebsite.ViewModels.ProjectViewModels.ProjectBoardViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

<div style="text-align:center;">

    <h1>@Model.Project.Name - Project Board</h1>

    @if (Model.Project.ProjectBoard == null)
    {
        <p>No board found for this project.</p>
    }
    else
    {
        <div class="d-flex flex-row justify-content-center">
            @foreach (var stage in Model.Project.ProjectBoard.Stages.OrderBy(s => s.Position))
            {
                var stagePermission = ((List<StagePermissionViewModel>)ViewBag.StagesWithPermissions)
                .FirstOrDefault(item => item.Stage.Id == stage.Id);

                var isUserAssignedToGroup = stagePermission?.IsUserAssignedToGroup ?? false;
                var isAdmin = stagePermission?.IsAdmin ?? false;

                <div class="p-2 board-column" style="border: 1px solid #ccc; margin: 10px;">
                    <h5>
                        @if (Model.CanAddStage)
                        {
                            <a asp-controller="Project" asp-action="EditStage" asp-route-stageId="@stage.Id">
                                @stage.Position - @stage.Name
                            </a>
                        }
                        else
                        {
                            @($"{stage.Position} - {stage.Name}")
                        }

                        
                        <a asp-controller="Project" asp-action="CreateTask" asp-route-stageId="@stage.Id"
                           class="btn btn-sm btn-primary" title="Create Task" style="margin-left: 10px; font-size: 12px;">
                            <i class="fas fa-plus"></i>
                            </a>
                        
                    </h5>

                    <h8>
                        Assigned Group: @stage.AssignedGroup?.Name
                    </h8>

                    @{
                        var managedUsers = ViewBag.ManagedUsers as List<User> ?? new List<User>();
                        var userId = int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier));
                    }

                    @foreach (var taskStage in stage.TaskStages
                   .Where(ts => ts.CompletedDate == null)
                   .OrderByDescending(ts => ts.EnteredDate)
                   .DistinctBy(ts => ts.TaskId))
                    {
                        <div class="p-2 board-task" style="border: 1px solid #ccc; margin: 10px">
                            <div>
                                <h5>@taskStage.Task.Name</h5>

                                <div class="d-flex justify-content-center align-items-center gap-2 mt-2">
                                    <a asp-controller="Project" asp-action="EditTask" asp-route-taskId="@taskStage.TaskId"
                                       class="btn btn-sm btn-warning">
                                        <i class="fas fa-edit"></i> View
                                    </a>

                                    @if (taskStage.Task.CreatorUserId == userId
                                         || Model.CanDeleteAnyTask
                                         || managedUsers.Any(user => user.Id == taskStage.Task.CreatorUserId))
                                    {
                                        <a asp-controller="Project" asp-action="DeleteTask" asp-route-taskStageId="@taskStage.Id"
                                           onclick="return confirm('Are you sure you want to delete this task?');"
                                           class="btn btn-danger p-1 d-flex align-items-center justify-content-center"
                                           style="font-size: 12px; width: 25px; height: 25px;">
                                            <i class="bi bi-trash" style="font-size: 20px;"></i>
                                        </a>
                                    }
                                </div>

                                <form asp-controller="Project" asp-action="MoveTask" method="post" style="margin-top: 10px;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="taskId" value="@taskStage.TaskId" />
                                    <input type="hidden" name="currentStageId" value="@taskStage.StageId" />
                                    <select name="newStageId">
                                        @foreach (var targetStage in Model.Project.ProjectBoard.Stages.Where(s => s.Id != taskStage.StageId))
                                        {
                                            <option value="@targetStage.Id">@targetStage.Name</option>
                                        }</select>
                                    <button type="submit" class="btn btn-sm btn-secondary">Move</button>
                                    </form>
                                
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    }

    @if (Model.CanAddStage)
    {
        <hr />
        <h3>Add Stage</h3>

        @Html.ValidationSummary(excludePropertyErrors: true, message: "", htmlAttributes: new { @class = "text-danger" })

        <form asp-controller="Project" asp-action="ProjectBoard" asp-route-id="@Model.Project.Id" method="post">
            @Html.AntiForgeryToken()

            <div>
                <label asp-for="StageForm.Name"></label>
                <input asp-for="StageForm.Name" />
                <span asp-validation-for="StageForm.Name" class="text-danger"></span>
            </div>

            <div>
                <label asp-for="StageForm.Position"></label>
                <input asp-for="StageForm.Position" type="number" />
                <span asp-validation-for="StageForm.Position" class="text-danger"></span>
            </div>

            <div>
                <label asp-for="StageForm.SelectedGroupId"></label>
                <select asp-for="StageForm.SelectedGroupId" asp-items="Model.StageForm.AvailableGroups">
                    <option value="">-- Select a Group --</option>
                </select>
                <span asp-validation-for="StageForm.SelectedGroupId" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary">Add Stage</button>

            <a asp-controller="Project" asp-action="EmployeeTaskReport" asp-route-employeeId="@Model.LoggedInEmployeeId"
               class="btn btn-info" title="View Employee Report">
                <i class="fas fa-user"></i> Employee Report
            </a>
            <a asp-controller="Project" asp-action="ProjectTaskReport" asp-route-projectId="@Model.Project.Id"
               class="btn btn-success" title="View Project Report">
                <i class="fas fa-project-diagram"></i> Project Report
            </a>
            <a asp-controller="Project" asp-action="GroupTaskReport" asp-route-groupId="@Model.LoggedInUserGroupId"
               class="btn btn-primary" title="View Group Report">
                <i class="fas fa-users"></i> Group Report
            </a>

        </form>
    }
   
    <a asp-controller="Employee" asp-action="ProjectDetails" asp-route-id="@Model.Project.Id" class="btn btn-secondary mt-3">
        Go Back
    </a>
</div>
